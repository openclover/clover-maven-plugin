<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.atlassian.maven.plugins.sample</groupId>
    <artifactId>clover-sample-gwt</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>GWT with Clover Example</name>

    <properties>
        <!-- GWT 2.8 requires 1.8 -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <gwt.version>2.8.2</gwt.version>
        <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.gwt</groupId>
                <artifactId>gwt</artifactId>
                <version>${gwt.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <profiles>
        <!-- Default profile. The reason why we use a default profile, instead of adding the gwt-maven-plugin in the
        top-level <build> tag, is that if we would do so, configuration of gwt-maven-plugin in with.clover.serveronly
        / with.clover.everything profiles would not overwrite the default setting (and we have to disable two goals) -->
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- GWT Maven Plugin -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>gwt-maven-plugin</artifactId>
                        <version>2.8.2</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>test</goal>
                                    <goal>i18n</goal>
                                    <goal>generateAsync</goal>
                                </goals>
                            </execution>
                        </executions>
                        <!-- Plugin configuration. There are many available options, see gwt-maven-plugin documentation at codehaus.org -->
                        <configuration>
                            <runTarget>GwtExample.html</runTarget>
                            <hostedWebapp>${webappDirectory}</hostedWebapp>
                            <i18nMessagesBundle>com.atlassian.client.Messages</i18nMessagesBundle>
                            <!-- Use htmlunit framework simulating Internet Explorer 11 -->
                            <mode>htmlunit</mode>
                            <htmlunit>IE11</htmlunit>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- ============================================================================================ -->
        <!-- Use this profile to enable Clover instrumentation for server-side code only.                 -->
        <!-- Client and common code will not be instrumented so it can be translated by GWT to JavaScript -->
        <!-- But thanks to this you can perform full tests or your application in a web browser           -->
        <!-- ============================================================================================ -->
        <profile>
            <id>with.clover.serveronly</id>
            <build>
                <plugins>
                    <!-- GWT Maven Plugin -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>gwt-maven-plugin</artifactId>
                        <version>2.8.2</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>test</goal>
                                    <goal>i18n</goal>
                                    <goal>generateAsync</goal>
                                </goals>
                            </execution>
                        </executions>
                        <!-- Plugin configuration. There are many available options, see gwt-maven-plugin documentation at codehaus.org -->
                        <configuration>
                            <runTarget>GwtExample.html</runTarget>
                            <hostedWebapp>${webappDirectory}</hostedWebapp>
                            <i18nMessagesBundle>com.atlassian.client.Messages</i18nMessagesBundle>
                            <!-- Use htmlunit framework simulating Internet Explorer 11 -->
                            <mode>htmlunit</mode>
                            <htmlunit>IE11</htmlunit>
                            <validateOnly>true</validateOnly>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.openclover</groupId>
                        <artifactId>clover-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>clover-initialization</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>setup</goal>
                                    <!-- Enable Clover instrumentation -->
                                </goals>
                            </execution>
                            <execution>
                                <id>clover-reporting</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>aggregate</goal>
                                    <!-- Aggregate results from sub-modules -->
                                    <goal>clover</goal>
                                    <!-- Generate report -->
                                </goals>
                            </execution>
                        </executions>
                        <version>@project.version@</version>
                        <configuration>
                            <!-- List all server-side packages which has to be instrumented -->
                            <includes>
                                <include>com/atlassian/server/**</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <!-- Generate compiled stuff in the folder used for developing mode -->
        <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

        <plugins>
            <!-- Copy static web files before executing gwt:run -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <webappDirectory>${webappDirectory}</webappDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
            </plugin>
        </plugins>
    </build>

</project>

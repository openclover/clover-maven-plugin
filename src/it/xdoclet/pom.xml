<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<project>
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.atlassian.maven.plugins</groupId>
    <artifactId>clover-maven-plugin-sample-forked-lifecycle</artifactId>
    <packaging>jar</packaging>
    <name>Clover Maven Plugin Forked Lifecycle Sample</name>
    <description>
        This is a test case which checks if 'clover:instrument' goal will create a forked lifecycle (so that compiled
        artefacts are written to 'target/clover' instead of default 'target' directory).

        Current value of 'project.build.directory' property is written to a file using AntRun plugin.
        Value from a file is read by a test case executed by Surefire plugin. Test case creates test file in specified location.
        Existence of the test file is checked by the Verifier plugin.

        Note: we use a hack with a property file because we cannot write '${project.build.directory}' declaration directly
        in the POM. The reason is that it works only in Maven 2.x. Maven 2.x treats all Maven-related properties
        (project.* etc) in a special way, updating all references to them in the POM in the forked lifecycle with a
        current value.

        Since Maven 3.x, all properties are resolved only once, during calculation of effective POM. As a consequence, the
        ${project.build.directory} variable declared directly in POM has always the same value (even in forked cycle).
        So the only way to get the current value is to read it 'at runtime' (what the &lt;echoproperties/&gt; does).
    </description>
    <version>1.0-SNAPSHOT</version>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>clover-maven-plugin</artifactId>
                <version>4.2.0-SNAPSHOT</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>instrument</goal>
                            <goal>clover</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <configuration>
                            <!-- Hack: use &lt;echoproperties&gt; to get current value of the ${project.build.directory}
                             (different values for the default and forked lifecycle) -->
                            <tasks>
                                <echoproperties destfile="build.properties">
                                    <propertyset>
                                        <propertyref name="project.build.directory"/>
                                    </propertyset>
                                </echoproperties>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12.4</version>
                <configuration>
                    <!-- Pass content of build.properties file as system properties for a test case -->
                    <systemPropertiesFile>build.properties</systemPropertiesFile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-verifier-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <failOnError>true</failOnError>
                    <!-- Verify that the test case has written a test file in correct location -->
                    <verificationFile>${basedir}/src/test/verifier/verifications.xml</verificationFile>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
